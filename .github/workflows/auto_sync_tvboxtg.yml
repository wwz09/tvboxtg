name: Auto-update TVBoxTG

on:
  schedule:
    - cron: "0 */2 * * *"
  workflow_dispatch:

permissions:
  contents: write
  actions: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Configure Git
        run: |
          git config --global user.name "wwz09"
          git config --global user.email "wwz5124@gmail.com"

      - name: Verify upstream repository
        run: |
          for i in {1..3}; do
            curl -s -o /dev/null -w "%{http_code}" "https://github.com/ls125781003/tvboxtg.git" && break
            echo "Attempt $i failed, retrying in 1 second..."
            sleep 1
          done
          curl_status=$(curl -s -o /dev/null -w "%{http_code}" "https://github.com/ls125781003/tvboxtg.git")
          if [[ ! $curl_status =~ ^(200|401)$ ]]; then
            echo "Upstream repository not reachable, status code: $curl_status"
            exit 1
          fi

      - name: Add upstream
        run: git remote add upstream "https://github.com/ls125781003/tvboxtg.git" || echo "Upstream already exists"

      - name: Fetch from upstream
        run: git fetch upstream || echo "Fetch failed, re-adding upstream..." && git remote remove upstream && git remote add upstream "https://github.com/ls125781003/tvboxtg.git" && git fetch upstream

      - name: Merge upstream changes
        id: merge
        run: |
          git checkout main
          git merge --no-edit upstream/main || echo "Conflict detected, resolving..." && git checkout --theirs . && git add . && git commit -m "Auto resolve sync conflicts $(date)" && echo "Conflict resolved with upstream version"
          echo "Upstream merge completed"

      - name: Check for changes
        id: check_changes
        run: |
          git status
          changes=$(git status --porcelain)
          if [[ -n "$changes" ]]; then
            echo "Changes detected"
            echo "$changes"
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          else
            echo "No changes detected"
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          fi

      - name: Commit changes
        if: ${{ env.HAS_CHANGES == 'true' }}
        run: |
          git add .
          git commit -m "Auto sync upstream changes $(date)" || echo "Commit failed, retrying with --allow-empty" && git commit -m "Auto sync upstream changes $(date)" --allow-empty

      - name: Push changes
        run: |
          git push origin main || echo "Push failed, retrying with pull..." && git pull --rebase origin main && git push origin main || echo "Second push failed, retrying again..." && git pull --rebase origin main && git push origin main

      - name: Trigger URL replacement
        if: ${{ env.HAS_CHANGES == 'true' }}
        run: |
          echo "Triggering URL replacement workflow..."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/dispatches -d '{"event_type":"sync_upstream"}' || echo "Trigger failed, retrying..." && sleep 5 && curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/dispatches -d '{"event_type":"sync_upstream"}' || echo "Second trigger failed, exit gracefully" && exit 0